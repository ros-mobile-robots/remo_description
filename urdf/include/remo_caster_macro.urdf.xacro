<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- ===================== Caster xacro =========================================

  Xacro to create caster links and the respective joints. For more detail information and usage, see:
    https://github.com/pxalcantara/mobile_robot_description/wiki/Motor-xacro

  params:
  - prefix [string]: used to diferentiate the link and joint name;
  - reflect [1/-1]: value to set the side of the motor;
  - motor_props [dictionary]: motor properties;
  - base_props [dictionary]: base link properties;
  - mesh [string]: file name of the motor mesh;
    - DEFAULT Value -> Empty string
-->

<!-- Caster wheel link & joint macro -->
  <!-- locationprefix locationright wheel_base_dx TODO remove -->
  <xacro:macro name="caster_wheel" 
                params="prefix reflect wheel_props locationright:=${0} scale:=''">
    <!-- caster base (fixed) -->
    <link name="${prefix}_caster_base_link">
      <xacro:cylinder_inertia  m="${wheel_props['base']['mass']}"
                               r="${wheel_props['base']['size']['radius']}"
                               l="${wheel_props['base']['size']['length']}"
                               o_xyz="0.0 0.0 ${-wheel_props['base']['size']['length']/2.0}"
                               o_rpy="0.0 0.0 0.0" />
      <xacro:if value="${wheel_props['base']['mesh'] != '' }" >
        <visual>
          <!-- Set origin to size_z/2 to move visual down by half the size -->
          <origin xyz="0 0 ${-wheel_props['base']['size']['length']/2.0}" rpy="0 0 0" />
          <geometry>
            <xacro:if value="${scale != '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['base']['mesh']}" scale="${scale}"/>
            </xacro:if>
            <xacro:if value="${scale == '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['base']['mesh']}" />
            </xacro:if>
          </geometry>
          <material name="black"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['base']['mesh'] == '' }" >
        <visual>
          <origin xyz="0 0 ${-wheel_props['base']['size']['length']/2.0}" rpy="0 0 0" />
          <geometry>
            <cylinder length="${wheel_props['base']['size']['length']}" radius="${wheel_props['base']['size']['radius']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 ${-wheel_props['base']['size']['length']/2.0}" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheel_props['base']['size']['length']}" radius="${wheel_props['base']['size']['radius']}" />
        </geometry>
      </collision>
    </link>
    <joint name="${prefix}_caster_base_joint" type="fixed">
      <origin xyz="${wheel_props['base']['dx']} ${-wheel_props['base']['dy'] * locationright} ${wheel_props['base']['dz']}" 
              rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${prefix}_caster_base_link" />
    </joint>
    <gazebo reference="${prefix}_caster_base_link">
      <material>Gazebo/Grey</material>
    </gazebo>


    <!-- caster hub -->
    <link name="${prefix}_caster_rotation_link">
      <xacro:cylinder_inertia  m="${wheel_props['hub']['mass']}"
                               r="${wheel_props['hub']['size']['radius']}"
                               l="${wheel_props['hub']['size']['length']}"
                               o_xyz="0.0 0.0 ${-wheel_props['hub']['size']['length']/2.0}"
                               o_rpy="0.0 0.0 0.0" />
      <xacro:if value="${wheel_props['hub']['mesh'] != '' }" >
        <visual>
          <!-- Set origin to size_z/2 to move visual down by half the size -->
          <origin xyz="0 0 ${-wheel_props['hub']['size']['length']/2.0}" rpy="0 0 0" />
          <geometry>
            <xacro:if value="${scale != '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['hub']['mesh']}" scale="${scale}"/>
            </xacro:if>
            <xacro:if value="${scale == '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['hub']['mesh']}" />
            </xacro:if>
          </geometry>
          <material name="black"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['hub']['mesh'] == '' }" >
        <visual>
          <origin xyz="0 0 ${-wheel_props['hub']['size']['length']/2.0}" rpy="0 0 0" />
          <geometry>
            <cylinder length="${wheel_props['hub']['size']['length']}" radius="${wheel_props['hub']['size']['radius']}" />
          </geometry>
          <material name="red"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 ${-wheel_props['hub']['size']['length']/2.0}" rpy="0 0 0" />
        <geometry>
          <cylinder length="${wheel_props['hub']['size']['length']}" radius="${wheel_props['hub']['size']['radius']}" />
        </geometry>
      </collision>
    </link>
    <joint name="${prefix}_caster_rotation_joint" type="continuous">
      <origin xyz="${wheel_props['hub']['dx']} ${-wheel_props['hub']['dy'] * locationright} ${wheel_props['hub']['dz']}"
              rpy="0 0 0" />
      <parent link="base_link" />
      <child link="${prefix}_caster_rotation_link" />
      <axis xyz="0 0 1" />
    </joint>
    <gazebo reference="${prefix}_caster_rotation_link">
      <material>Gazebo/Grey</material>
    </gazebo>


    <!-- caster wheel -->
    <link name="${prefix}_caster_wheel_link">
      <xacro:sphere_inertia m="${wheel_props['wheel']['mass']}"
                            r="${wheel_props['wheel']['radius']}"/>
        <!-- TODO unused block error?: origin xyz="0 0 0" rpy="${pi/2} 0 0" /-->
      <xacro:if value="${wheel_props['wheel']['mesh'] != '' }" >
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <xacro:if value="${scale != '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['wheel']['mesh']}" scale="${scale}"/>
            </xacro:if>
            <xacro:if value="${scale == '' }" >
              <mesh filename="package://${package_name}/meshes/${robot_name}/${wheel_props['wheel']['mesh']}" />
            </xacro:if>
          </geometry>
          <!-- TODO use this?: xacro:insert_block name="material_dark_grey" /-->
          <material name="dark_grey"/>
        </visual>
      </xacro:if>
      <xacro:if value="${wheel_props['wheel']['mesh'] == '' }" >
        <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
            <sphere radius="${wheel_props['wheel']['radius']}" />
          </geometry>
          <material name="white"/>
        </visual>
      </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <sphere radius="${wheel_props['wheel']['radius']}" />
        </geometry>
      </collision>
    </link>
    <joint name="${prefix}_caster_wheel_joint" type="continuous">
      <origin xyz="${wheel_props['wheel']['dx']} ${-wheel_props['wheel']['dy'] * locationright} ${wheel_props['wheel']['dz']}" 
              rpy="0 0 0" />
      <parent link="${prefix}_caster_rotation_link" />
      <child link="${prefix}_caster_wheel_link" />
      <axis xyz="0 1 0" />
      <!-- Don't turn damping higher than 0.001, otherwise caster and wheels merge in simulation (bug?) -->
      <dynamics damping="0.001" friction="0.0"/>
    </joint>
    <gazebo reference="${prefix}_caster_wheel_link">
      <material>Gazebo/White</material>
    </gazebo>
  </xacro:macro>

</robot>